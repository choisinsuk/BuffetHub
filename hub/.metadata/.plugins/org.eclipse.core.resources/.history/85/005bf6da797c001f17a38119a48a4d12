package com.hub.service;

import java.util.Optional;

import org.modelmapper.ModelMapper;
import org.springframework.stereotype.Service;

import com.hub.domain.Reserve;
import com.hub.dto.ReserveDTO;
import com.hub.repository.ReserveRepository;

import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;
import lombok.extern.log4j.Log4j2;

@Service
@Transactional
@Log4j2
@RequiredArgsConstructor // 생성자 자동 주입
public class ReserveServiceImpl implements ReserveService {

	// 자동주입 대상은 final로
	private final ModelMapper modelMapper;
	private final ReserveRepository reserveRepository;
	
	// 데이터 삽입 메서드
	@Override
	public Long register(ReserveDTO reserveDTO) {
		Reserve reserve = modelMapper.map(reserveDTO, Reserve.class);
		Reserve savedReserve = reserveRepository.save(reserve);
		
		return savedReserve.getRs_nb();
	}

	// 데이터 조회 메서드
	@Override
	public ReserveDTO get(Long rs_nb) {
		Optional<Reserve> result = reserveRepository.findById(rs_nb);
		
		Reserve reserve = result.orElseThrow();
		ReserveDTO dto = modelMapper.map(reserve, ReserveDTO.class);
		
		return dto;
	}

	// 데이터 수정 메서드
	@Override
	public void modify(ReserveDTO reserveDTO) {
		Optional<Reserve> result = reserveRepository.findById(reserveDTO.getRs_nb());
		
		Reserve reserve = result.orElseThrow();
		
		reserve.changeRs_dt(reserveDTO.getRs_dt());
		
		reserve.changeRs_adult_person_cnt(reserveDTO.getRs_adult_person_cnt());
		reserve.changeRs_child_person_cnt(reserveDTO.getRs_child_person_cnt());
		reserve.changeRs_preage_person_cnt(reserveDTO.getRs_preage_person_cnt());
		
		reserve.changeRs_visit_adult_cnt(reserveDTO.getRs_visit_adult_cnt());
		reserve.changeRs_visit_child_cnt(reserveDTO.getRs_visit_child_cnt());
		reserve.changeRs_visit_preage_cnt(reserveDTO.getRs_visit_preage_cnt());
		
		reserve.changeRs_realpeople_cnt(reserveDTO.getRs_realpeople_cnt());
		
		reserve.changeRs_payment_complete_yn(reserveDTO.isRs_payment_complete_yn());
		reserve.changeRs_visit_yn(reserveDTO.isRs_visit_yn());
		
		reserveRepository.save(reserve);
		
	}

	// 데이터 삭제 메서드
	@Override
	public void remove(Long rs_nb) {
		reserveRepository.deleteById(rs_nb);
		
	}
	
	
}
